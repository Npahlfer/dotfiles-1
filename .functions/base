#!/usr/bin/env bash

_info() {
  >&2 echo "[info] $@"
}

_warn() {
  >&2 echo "[warn] $@"
}

_error() {
  >&2 echo "[error] $@"
}

_production() {
  # iTerm escape code to turn the terminal red.
  printf "\033]Ph501010\033\\"
}

_watchout() {
  printf "\033]Ph403010\033\\"
}

_safe() {
  printf "\033]Ph103010\033\\"
}

_pick_first_col() {
  cut -d ' ' -f1
}

cached() {
  _cached "$@" 300
}

_trim() {
  echo "$@" | sed 's,^ *,,; s, *$,,'
}

_cached() {
  local cmd="$1"
  local ttl="${2:-60}"
  local ts="$(( $(date +'%s') / $ttl ))"
  local filename="${TMPDIR}${ts}-$(echo "${cmd}" | shasum | cut -d' ' -f1)"
  if [[ "$NC" == '1' ]] || [[ ! -s "$filename" ]]; then
    eval "$cmd" | tee "$filename"
    _info "Cached '$cmd' to '$filename'."
  else
    cat "$filename"
    _warn "Used cached file '$filename'"
  fi
}

_with_fzf() {
  local app="$1"
  local prefix="$2"
  local file="$(_fzf "${prefix}" || echo "${prefix}")"
  if [[ -f "$file" ]]; then
    eval "$app $file"
  else
    echo "[error] '$file' is not a file."
  fi
}

_fzf() {
  fzf -1 -0 -q "$1"
}

_prefix() {
  basename "$(pwd)" | sed 's/\-.*//g'
}

_open_tunnel() {
  local host="${1}"
  local port="${2}"
  local local_port="${3:-$port}"
  local jump_host="${4:-jump}"
  _production
  ssh -M -S my-ctrl-socket -fnNT -L "${local_port}:${host}:${port}" "${jump_host}"
  ssh -S my-ctrl-socket -O check 'jump'
  _info "Tunnel to '${host}:${port}' open on '127.0.0.1:${local_port}'"
}

_close_tunnel() {
  ssh -S my-ctrl-socket -O exit 'jump' || _warn 'The tunnel was already closed.'
  _info 'Tunnel closed.'
  _safe
}
